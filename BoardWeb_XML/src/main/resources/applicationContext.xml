<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	<aop:aspectj-autoproxy />

	<!-- <context:component-scan base-package="com.springbook.biz"></context:component-scan> 
		<bean id="log4j" class="com.springbook.biz.common.Log4jAdvice"></bean> <bean 
		id="log" class="com.springbook.biz.common.LogAdvice"></bean> <bean id="before" 
		class="com.springbook.biz.common.BeforeAdvice"></bean> <bean id="afterReturning" 
		class="com.springbook.biz.common.AfterReturningAdvice"></bean> <bean id="afterThrowing" 
		class="com.springbook.biz.common.AfterThrowingAdvice"></bean> <bean id="after" 
		class="com.springbook.biz.common.AfterAdvice"></bean> <bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean> 
		<aop:config> <aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" 
		id="allPointcut" /> <aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" 
		id="getPointcut" /> <aop:aspect ref="afterThrowing"> <aop:after-throwing 
		pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj"/> </aop:aspect> 
		<aop:aspect ref="around"> <aop:around pointcut-ref="allPointcut" method="aroundLog"/> 
		</aop:aspect> </aop:config> -->

	<!-- DataSoruce 설정 -->
	<context:property-placeholder location="classpath:config/database.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction 어드바이스 설정 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- AOP 설정 (tx어드바이스 + tx포인트컷) -->
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.springbook.biz..*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
</beans>
